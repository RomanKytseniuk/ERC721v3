/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CheckIftokenERC721,
  CheckIftokenERC721Interface,
} from "../../../contracts/MainContract.sol/CheckIftokenERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_testSubject",
        type: "address",
      },
    ],
    name: "check",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRes",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "res",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103a5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636f10e28514610046578063797e7a4814610064578063c23697a814610082575b600080fd5b61004e61009e565b60405161005b91906101dc565b60405180910390f35b61006c6100b1565b60405161007991906101dc565b60405180910390f35b61009c6004803603810190610097919061025a565b6100c7565b005b600060149054906101000a900460ff1681565b60008060149054906101000a900460ff16905090565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166301ffc9a76380ac58cd6040518263ffffffff1660e01b815260040161016491906102fb565b602060405180830381865afa158015610181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a59190610342565b600060146101000a81548160ff02191690831515021790555050565b60008115159050919050565b6101d6816101c1565b82525050565b60006020820190506101f160008301846101cd565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610227826101fc565b9050919050565b6102378161021c565b811461024257600080fd5b50565b6000813590506102548161022e565b92915050565b6000602082840312156102705761026f6101f7565b5b600061027e84828501610245565b91505092915050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60008160e01b9050919050565b60006102e56102e06102db84610287565b6102bd565b610291565b9050919050565b6102f5816102ca565b82525050565b600060208201905061031060008301846102ec565b92915050565b61031f816101c1565b811461032a57600080fd5b50565b60008151905061033c81610316565b92915050565b600060208284031215610358576103576101f7565b5b60006103668482850161032d565b9150509291505056fea264697066735822122003acc39eedd99656c11938cea25f5d9bc0e8342203f8a800e15663983f33840964736f6c634300080d0033";

type CheckIftokenERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CheckIftokenERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CheckIftokenERC721__factory extends ContractFactory {
  constructor(...args: CheckIftokenERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CheckIftokenERC721> {
    return super.deploy(overrides || {}) as Promise<CheckIftokenERC721>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CheckIftokenERC721 {
    return super.attach(address) as CheckIftokenERC721;
  }
  override connect(signer: Signer): CheckIftokenERC721__factory {
    return super.connect(signer) as CheckIftokenERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CheckIftokenERC721Interface {
    return new utils.Interface(_abi) as CheckIftokenERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CheckIftokenERC721 {
    return new Contract(address, _abi, signerOrProvider) as CheckIftokenERC721;
  }
}
