{
  "contractName": "CheckIftokenERC721",
  "abi": [
    {
      "inputs": [],
      "name": "res",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_testSubject",
          "type": "address"
        }
      ],
      "name": "check",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_testSubject\",\"type\":\"address\"}],\"name\":\"check\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"res\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MainContract.sol\":\"CheckIftokenERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/MainContract.sol\":{\"keccak256\":\"0x5fe20fcb2a80f673169007b34e9361cd424bcad2fa53dd5766f73f3e92d08e4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aff676ff8640a4066fda3318bfcdd910385864aab63551e6e84e77792e8fc21\",\"dweb:/ipfs/Qmc1tqASH7vAhbazUn7iC8Pq3CTJzKzdn8mq719bP5EsrG\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101a1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80636f10e2851461003b578063c23697a814610063575b600080fd5b60005461004f90600160a01b900460ff1681565b604051901515815260200160405180910390f35b610076610071366004610119565b610078565b005b600080546001600160a01b0319166001600160a01b0383169081179091556040516301ffc9a760e01b81526380ac58cd60e01b60048201526301ffc9a790602401602060405180830381865afa1580156100d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fa9190610149565b60008054911515600160a01b0260ff60a01b1990921691909117905550565b60006020828403121561012b57600080fd5b81356001600160a01b038116811461014257600080fd5b9392505050565b60006020828403121561015b57600080fd5b8151801515811461014257600080fdfea264697066735822122083e3b6a119c52e0ffee09d58553f0672fd2106b3680728ae75565736a03d3ae864736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80636f10e2851461003b578063c23697a814610063575b600080fd5b60005461004f90600160a01b900460ff1681565b604051901515815260200160405180910390f35b610076610071366004610119565b610078565b005b600080546001600160a01b0319166001600160a01b0383169081179091556040516301ffc9a760e01b81526380ac58cd60e01b60048201526301ffc9a790602401602060405180830381865afa1580156100d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fa9190610149565b60008054911515600160a01b0260ff60a01b1990921691909117905550565b60006020828403121561012b57600080fd5b81356001600160a01b038116811461014257600080fd5b9392505050565b60006020828403121561015b57600080fd5b8151801515811461014257600080fdfea264697066735822122083e3b6a119c52e0ffee09d58553f0672fd2106b3680728ae75565736a03d3ae864736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1011:12",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:12",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "109:92:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "119:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "131:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "142:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "127:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "127:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "119:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "161:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "186:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "179:6:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "179:14:12"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "172:6:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "172:22:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "154:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "154:41:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "154:41:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "78:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "89:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "100:4:12",
                "type": ""
              }
            ],
            "src": "14:187:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "276:216:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "322:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "331:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "334:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "324:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "324:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "324:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "297:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "306:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "293:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "293:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "318:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "289:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "289:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "286:52:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "347:36:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "373:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "360:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "360:23:12"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "351:5:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "446:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "455:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "458:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "448:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "448:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "448:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "405:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "416:5:12"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "431:3:12",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "436:1:12",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "427:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "427:11:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "440:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "423:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "423:19:12"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "412:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "412:31:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "402:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "402:42:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "395:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "395:50:12"
                  },
                  "nodeType": "YulIf",
                  "src": "392:70:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "471:15:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "481:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "471:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "242:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "253:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "265:6:12",
                "type": ""
              }
            ],
            "src": "206:286:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "614:113:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "624:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "636:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "647:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "632:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "632:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "624:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "666:9:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "685:3:12",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "690:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "681:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "681:16:12"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "703:3:12",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "708:10:12",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "699:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "699:20:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "677:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "677:43:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "659:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "659:62:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "659:62:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_rational_2158778573_by_1__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "583:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "594:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "605:4:12",
                "type": ""
              }
            ],
            "src": "497:230:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "810:199:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "856:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "865:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "868:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "858:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "858:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "858:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "831:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "840:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "827:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "827:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "852:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "823:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "823:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "820:52:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "881:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "900:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "894:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "894:16:12"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "885:5:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "963:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "972:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "975:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "965:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "965:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "965:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "932:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "953:5:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "946:6:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "946:13:12"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "939:6:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "939:21:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "929:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "929:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "922:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "922:40:12"
                  },
                  "nodeType": "YulIf",
                  "src": "919:60:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "988:15:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "998:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "988:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "776:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "787:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "799:6:12",
                "type": ""
              }
            ],
            "src": "732:277:12"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_rational_2158778573_by_1__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(shl(224, value0), shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "143:248:11:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "143:248:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;209:15;;;;;-1:-1:-1;;;209:15:11;;;;;;;;;179:14:12;;172:22;154:41;;142:2;127:18;209:15:11;;;;;;;229:159;;;;;;:::i;:::-;;:::i;:::-;;;281:11;:45;;-1:-1:-1;;;;;;281:45:11;-1:-1:-1;;;;;281:45:11;;;;;;;;341:41;;-1:-1:-1;;;341:41:11;;-1:-1:-1;;;341:41:11;;;659:62:12;341:29:11;;632:18:12;;341:41:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;335:3;:47;;;;;-1:-1:-1;;;335:47:11;-1:-1:-1;;;;335:47:11;;;;;;;;;-1:-1:-1;229:159:11:o;206:286:12:-;265:6;318:2;306:9;297:7;293:23;289:32;286:52;;;334:1;331;324:12;286:52;360:23;;-1:-1:-1;;;;;412:31:12;;402:42;;392:70;;458:1;455;448:12;392:70;481:5;206:286;-1:-1:-1;;;206:286:12:o;732:277::-;799:6;852:2;840:9;831:7;827:23;823:32;820:52;;;868:1;865;858:12;820:52;900:9;894:16;953:5;946:13;939:21;932:5;929:32;919:60;;975:1;972;965:12",
  "source": "//SPDX-License-Identifier: MIT\r\npragma solidity 0.8.13; \r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\r\n\r\ncontract CheckIftokenERC721{\r\n  IERC721Enumerable testSubject;\r\n  bool public res;\r\n  function check(address _testSubject) public{\r\n      testSubject = IERC721Enumerable(_testSubject);\r\n      res = testSubject.supportsInterface(0x80ac58cd);\r\n  }\r\n}",
  "sourcePath": "C:\\Users\\IdeaSoft\\Desktop\\Staking project\\ERC721v3\\contracts\\MainContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/MainContract.sol",
    "exportedSymbols": {
      "CheckIftokenERC721": [
        1730
      ],
      "IERC165": [
        1613
      ],
      "IERC721": [
        981
      ],
      "IERC721Enumerable": [
        1030
      ]
    },
    "id": 1731,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1704,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:11"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
        "id": 1705,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1731,
        "sourceUnit": 1031,
        "src": "60:79:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CheckIftokenERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1730,
        "linearizedBaseContracts": [
          1730
        ],
        "name": "CheckIftokenERC721",
        "nameLocation": "152:18:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1708,
            "mutability": "mutable",
            "name": "testSubject",
            "nameLocation": "193:11:11",
            "nodeType": "VariableDeclaration",
            "scope": 1730,
            "src": "175:29:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC721Enumerable_$1030",
              "typeString": "contract IERC721Enumerable"
            },
            "typeName": {
              "id": 1707,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1706,
                "name": "IERC721Enumerable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1030,
                "src": "175:17:11"
              },
              "referencedDeclaration": 1030,
              "src": "175:17:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Enumerable_$1030",
                "typeString": "contract IERC721Enumerable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "6f10e285",
            "id": 1710,
            "mutability": "mutable",
            "name": "res",
            "nameLocation": "221:3:11",
            "nodeType": "VariableDeclaration",
            "scope": 1730,
            "src": "209:15:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1709,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "209:4:11",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1728,
              "nodeType": "Block",
              "src": "272:116:11",
              "statements": [
                {
                  "expression": {
                    "id": 1719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1715,
                      "name": "testSubject",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1708,
                      "src": "281:11:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721Enumerable_$1030",
                        "typeString": "contract IERC721Enumerable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1717,
                          "name": "_testSubject",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1712,
                          "src": "313:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1716,
                        "name": "IERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1030,
                        "src": "295:17:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1030_$",
                          "typeString": "type(contract IERC721Enumerable)"
                        }
                      },
                      "id": 1718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "295:31:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721Enumerable_$1030",
                        "typeString": "contract IERC721Enumerable"
                      }
                    },
                    "src": "281:45:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721Enumerable_$1030",
                      "typeString": "contract IERC721Enumerable"
                    }
                  },
                  "id": 1720,
                  "nodeType": "ExpressionStatement",
                  "src": "281:45:11"
                },
                {
                  "expression": {
                    "id": 1726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1721,
                      "name": "res",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1710,
                      "src": "335:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30783830616335386364",
                          "id": 1724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "371:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2158778573_by_1",
                            "typeString": "int_const 2158778573"
                          },
                          "value": "0x80ac58cd"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2158778573_by_1",
                            "typeString": "int_const 2158778573"
                          }
                        ],
                        "expression": {
                          "id": 1722,
                          "name": "testSubject",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1708,
                          "src": "341:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC721Enumerable_$1030",
                            "typeString": "contract IERC721Enumerable"
                          }
                        },
                        "id": 1723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1612,
                        "src": "341:29:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view external returns (bool)"
                        }
                      },
                      "id": 1725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "341:41:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "335:47:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1727,
                  "nodeType": "ExpressionStatement",
                  "src": "335:47:11"
                }
              ]
            },
            "functionSelector": "c23697a8",
            "id": 1729,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "check",
            "nameLocation": "238:5:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1712,
                  "mutability": "mutable",
                  "name": "_testSubject",
                  "nameLocation": "252:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1729,
                  "src": "244:20:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "244:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "243:22:11"
            },
            "returnParameters": {
              "id": 1714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "272:0:11"
            },
            "scope": 1730,
            "src": "229:159:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1731,
        "src": "143:248:11",
        "usedErrors": []
      }
    ],
    "src": "32:359:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-05-05T06:09:42.872Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}